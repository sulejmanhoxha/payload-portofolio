/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations
  }
  collections: {
    blogs: Blog
    users: User
    projects: Project
    media: Media
    'payload-preferences': PayloadPreference
    'payload-migrations': PayloadMigration
  }
  db: {
    defaultIDType: string
  }
  globals: {}
  locale: null
  user: User & {
    collection: 'users'
  }
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string
    password: string
  }
  login: {
    email: string
    password: string
  }
  registerFirstUser: {
    email: string
    password: string
  }
  unlock: {
    email: string
    password: string
  }
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogs".
 */
export interface Blog {
  id: string
  slug: string
  title: string
  image?: (string | null) | Media
  author: string
  publishedAt: string
  summary: string
  content?: {
    root: {
      type: string
      children: {
        type: string
        version: number
        [k: string]: unknown
      }[]
      direction: ('ltr' | 'rtl') | null
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | ''
      indent: number
      version: number
    }
    [k: string]: unknown
  } | null
  content_html?: string | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string
  text?: string | null
  updatedAt: string
  createdAt: string
  url?: string | null
  thumbnailURL?: string | null
  filename?: string | null
  mimeType?: string | null
  filesize?: number | null
  width?: number | null
  height?: number | null
  focalX?: number | null
  focalY?: number | null
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string
  updatedAt: string
  createdAt: string
  email: string
  resetPasswordToken?: string | null
  resetPasswordExpiration?: string | null
  salt?: string | null
  hash?: string | null
  loginAttempts?: number | null
  lockUntil?: string | null
  password?: string | null
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "projects".
 */
export interface Project {
  id: string
  slug?: string | null
  name?: string | null
  image: string | Media
  technologies: {
    name: string
    id?: string | null
  }[]
  description: string
  url?: string | null
  github?: string | null
  content?: {
    root: {
      type: string
      children: {
        type: string
        version: number
        [k: string]: unknown
      }[]
      direction: ('ltr' | 'rtl') | null
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | ''
      indent: number
      version: number
    }
    [k: string]: unknown
  } | null
  content_html?: string | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string
  user: {
    relationTo: 'users'
    value: string | User
  }
  key?: string | null
  value?:
    | {
        [k: string]: unknown
      }
    | unknown[]
    | string
    | number
    | boolean
    | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string
  name?: string | null
  batch?: number | null
  updatedAt: string
  createdAt: string
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language:
    | 'auto'
    | '1c'
    | 'abnf'
    | 'accesslog'
    | 'actionscript'
    | 'ada'
    | 'angelscript'
    | 'apache'
    | 'applescript'
    | 'arcade'
    | 'arduino'
    | 'armasm'
    | 'asciidoc'
    | 'aspectj'
    | 'autohotkey'
    | 'autoit'
    | 'avrasm'
    | 'awk'
    | 'axapta'
    | 'bash'
    | 'basic'
    | 'bnf'
    | 'brainfuck'
    | 'c'
    | 'csharp'
    | 'cpp'
    | 'cal'
    | 'capnproto'
    | 'ceylon'
    | 'clean'
    | 'clojure'
    | 'clojure-repl'
    | 'cmake'
    | 'coffeescript'
    | 'coq'
    | 'cos'
    | 'crmsh'
    | 'crystal'
    | 'csp'
    | 'css'
    | 'd'
    | 'dart'
    | 'delphi'
    | 'diff'
    | 'django'
    | 'dns'
    | 'dockerfile'
    | 'dos'
    | 'dsconfig'
    | 'dts'
    | 'dust'
    | 'ebnf'
    | 'elixir'
    | 'elm'
    | 'erb'
    | 'erlang'
    | 'erlang-repl'
    | 'excel'
    | 'fsharp'
    | 'fix'
    | 'flix'
    | 'fortran'
    | 'gcode'
    | 'gams'
    | 'gauss'
    | 'gherkin'
    | 'glsl'
    | 'gml'
    | 'go'
    | 'golo'
    | 'gradle'
    | 'graphql'
    | 'groovy'
    | 'haml'
    | 'handlebars'
    | 'haskell'
    | 'haxe'
    | 'hsp'
    | 'http'
    | 'hy'
    | 'inform7'
    | 'ini'
    | 'irpf90'
    | 'isbl'
    | 'java'
    | 'javascript'
    | 'jboss-cli'
    | 'json'
    | 'julia'
    | 'julia-repl'
    | 'kotlin'
    | 'lasso'
    | 'latex'
    | 'ldif'
    | 'leaf'
    | 'less'
    | 'lisp'
    | 'livecodeserver'
    | 'livescript'
    | 'llvm'
    | 'lsl'
    | 'lua'
    | 'makefile'
    | 'markdown'
    | 'mathematica'
    | 'matlab'
    | 'maxima'
    | 'mel'
    | 'mercury'
    | 'mipsasm'
    | 'mizar'
    | 'mojolicious'
    | 'monkey'
    | 'moonscript'
    | 'n1ql'
    | 'nestedtext'
    | 'nginx'
    | 'nim'
    | 'nix'
    | 'node-repl'
    | 'nsis'
    | 'objectivec'
    | 'ocaml'
    | 'openscad'
    | 'oxygene'
    | 'parser3'
    | 'perl'
    | 'pf'
    | 'php'
    | 'php-template'
    | 'plaintext'
    | 'pony'
    | 'pgsql'
    | 'powershell'
    | 'processing'
    | 'profile'
    | 'prolog'
    | 'properties'
    | 'protobuf'
    | 'puppet'
    | 'purebasic'
    | 'python'
    | 'python-repl'
    | 'q'
    | 'qml'
    | 'r'
    | 'reasonml'
    | 'rib'
    | 'roboconf'
    | 'routeros'
    | 'rsl'
    | 'ruby'
    | 'ruleslanguage'
    | 'rust'
    | 'sas'
    | 'scala'
    | 'scheme'
    | 'scilab'
    | 'scss'
    | 'shell'
    | 'smali'
    | 'smalltalk'
    | 'sml'
    | 'sqf'
    | 'sql'
    | 'stan'
    | 'stata'
    | 'step21'
    | 'stylus'
    | 'subunit'
    | 'swift'
    | 'taggerscript'
    | 'tap'
    | 'tcl'
    | 'thrift'
    | 'tp'
    | 'twig'
    | 'typescript'
    | 'vala'
    | 'vbnet'
    | 'vbscript'
    | 'vbscript-html'
    | 'verilog'
    | 'vhdl'
    | 'vim'
    | 'wasm'
    | 'wren'
    | 'x86asm'
    | 'xl'
    | 'xml'
    | 'xquery'
    | 'yaml'
    | 'zephir'
  code: string
  id?: string | null
  blockName?: string | null
  blockType: 'code'
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown
}

declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}
